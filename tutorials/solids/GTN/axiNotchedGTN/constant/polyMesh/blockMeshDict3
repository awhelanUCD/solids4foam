/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM Extend Project: Open Source CFD        |
|  \\    /   O peration     | Version:  1.6-ext                               |
|   \\  /    A nd           | Web:      www.extend-project.de                 |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "constant/polyMesh";
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// Model Description
// 140 degrees channel approx 47 meters long

// Setup m4 stuff



// define geometry in mm


  // notched radius
  // bar height
   // bar width






















// start of blockMeshDict

convertToMeters 0.001;

vertices
(
    (0 0 0) //0

   // (2.49048674522688 0 -0.108944678448762)//1
    (4.98097349045376 0 -0.217889356897524)//1
    (6.14808817691959 2.82842712503625 -0.26894400895441)//2
    //(4.38704811073385 4.59619407818391 -0.191908488041203)//4
    (8.96575228281677 4 -0.392200842415542)//3
   // (8.96575228281677 6.5 -0.392200842415542)//6
    (8.96575228281677 20 -0.392200842415542)//4
    //(4.38704811073385 20 -0.191908488041203)//8

    (0 20 0)//5
    //(0 4.59619407818391 0)//10

    //(2.49048674522688 0 0.108944678448762)//11
    (4.98097349045376 0 0.217889356897524)//6
    (6.14808817691959 2.82842712503625 0.26894400895441)//7
    //(4.38704811073385 4.59619407818391 0.191908488041203)//14
    (8.96575228281677 4 0.392200842415542)//8
    //(8.96575228281677 6.5 0.392200842415542)//16
    (8.96575228281677 20 0.392200842415542)//9
    //(4.38704811073385 20 0.191908488041203)//18
);

blocks
(
    hex (0 1 2 5 0 6 7 5) (36 36 1) simpleGrading (1 1 1)
    hex (2 3 4 5 7 8 9 5) (36 36 1) simpleGrading (1 1 1)
    //hex (3 5 6 4 13 15 16 14) (20 20 1) simpleGrading (1 1 1)
    //hex (4 6 7 8 14 16 17 18) (20 20 1) simpleGrading (1 1 1)
    //hex (10 4 8 9 10 14 18 9) (20 20 1) simpleGrading (1 1 1)
);

edges
(
    arc 1 2 (5.28429671504573 1.53073372964985  -0.231158028667228)
    arc 6 7 (5.28429671504573 1.53073372964985 0.231158028667228)

   // arc 1 4 (2.98338698518884 2.48744231068101 -0.130506270074531)
   // arc 11 14 (2.98338698518884 2.48744231068101 0.130506270074531)

    arc 2 3 (7.44084345790599 3.69551813028062 -0.325494724861622)
    arc 7 8(7.44084345790599 3.69551813028062 0.325494724861622)

   // arc 4 6 (6.48777544233675 6.005216961706 -0.283803401390422)
    //arc 14 16 (6.48777544233675 6.005216961706 0.283803401390422)

    // arc 7 17(calc(para3*cosArcZ) 20 calc(para3*sinArcZ))
    // arc 6 16(calc(para3*cosArcZ) 6.5 calc(para3*sinArcZ))
    // arc 5 15(calc(para3*cosArcZ) 4 calc(para3*sinArcZ))
    // arc 3 13(calc((para3-para1*cos45)*cosArcZ) 2.8284 calc((para3-para1*cos45)*sinArcZ))
    // arc 2 12(calc(var1*cosArcZ) 0 calc(var1*sinArcZ))
);

patches
(
    empty  axis
    (
        (0 5 5 0)
    )
    patch right
    (
        (3 4 9 8)       
    )
    symmetryPlane  down
    (
        (6 0 1 6)
    )
    patch up
    (
        (4 9 5 4)
    )
    patch notchedFace
    (
        (6 1 2 7)
        (8 7 2 3)
    )
    wedge front
    (
        (0 6 7 5)
        (7 8 9 5)
    )

    wedge back
    (
        (3 2 5 4)
        (1 0 5 2)
    )
);

mergePatchPairs
(
);
